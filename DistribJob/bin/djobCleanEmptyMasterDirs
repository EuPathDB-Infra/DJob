#!/usr/bin/perl

use strict;

my ($dataDir, $reportOnly) = @ARGV;
usage() unless $dataDir;

die "First argument '$dataDir' must be a directory in which to find master/ dirs" unless -d $dataDir;

my @dirs = `find $dataDir -name master`;

print STDERR "Found these dirs to delete:\n\n";

foreach my $dir (@dirs) {
  chomp;
  my $count = `ls $dir/mainresult|wc -l`;
  chomp $c;
  next if $c;   # only delete dirs which have non-zero number of files in mainresult
  if ($reportOnly) {
    print STDERR "$dir\n";
    next;
  }
  my $cmd = "rm -r $dataDir/$dir";
  print STDERR "$cmd";
  system($cmd) && die "Failed: $?\n";
}


sub usage {

die "

Delete distribjob master/ dirs that are empty.  This is useful in a workflow context where there may be many systematic failures.  Directories that have an empty master/mainresult dir are deleted.

CAUTION:  do not run this command if any djob runs are in progress.   It could remove master/ dirs from them if they have not yet written to mainresult/

usage:  djobCleanEmptyMasterDirs data_dir [-r]

where:
   data_dir - a dir to start searching for master/ dirs
   -r       - a flag to report only, ie, show what will be deleted, but don't do the delete

";
}
