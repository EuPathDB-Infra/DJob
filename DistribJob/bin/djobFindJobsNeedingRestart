#!/usr/bin/perl

use strict;

my ($taskLogDir) = @ARGV;
usage() unless $taskLogDir;

# find task.logs that don't end in Done
die "Error: arg '$taskLogDir' is not a dir\n" unless -d $taskLogDir;
my @logs = `ls $taskLogDir/*.log`;
my @masterDirsOfInterest;
foreach my $log (@logs) {
    my @masterDir = `egrep '^master' $log`;   # find line in file that declares master dir
    next unless $masterDir[0];
    chomp $masterDir[0];
    $masterDir[0] =~ /masterdir = (.*)/ || die "can't parse master dir";
    my $m = $1;
    my $lastline = `tail -1 $log`;
    next if $lastline =~ /Done/;
    my $count = 0;
    if (-d "$m/mainresult") {
	$count = `ls $m/mainresult|wc -l`;
	chomp $count;
    }
    next unless $count;
    my $g = `grep 'restart=no' $m/../input/controller.prop`;
    chomp $g;
    print "$m/../input/controller.prop\n" if $g;
}

sub usage {

die "

Provide a list of controller.prop files that should have restart set to yes.  They correspond to task.log files that do not end in Done, and have non-empty master/mainresult.

CAUTION:  THESE MIGHT BE RUNNING JOBS.  So be sure they are not first.

usage:  djobFindJobsNeedingRestart tasklogs_dir

where:
   tasklogs_dir - a dir containg task.log files

";
}
