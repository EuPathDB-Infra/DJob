#!@perl@

use strict;

my ($nodecount, $minutes, $controllerPropFile) = &parseArgs(@ARGV);


##need to write to a file so that user can cancel this job if fails for some reason
my $tmp = "cancelLiniacJob.$$";
my $cancelFile = "$ENV{HOME}/$tmp";
open(F,">$cancelFile") || die "couldn't open '$cancelFile'";
print F "#!/bin/sh\n\ncanceljob ";
close F;
system("chmod +x $cancelFile");

print "\nThe script to cancel all the jobs for this submit is $cancelFile\n\n";

my $cmd = "distribjob --numNodes $nodecount --runTime $minutes --propFile $controllerPropFile --parallelInit 4 --fileName $cancelFile";

system($cmd);

#if($?){  ##distribjob failed for some reason
open(F,">>$cancelFile");
print F "\n\n";
close F;
system("$cancelFile > /dev/null 2>&1");
#}

unlink "$cancelFile";

sub parseArgs {
    my ($nodecount, $minutes, $controllerPropFile) = @ARGV;

    &usage unless ($nodecount && $minutes && $controllerPropFile);

    &usage if ($nodecount <= 0 || $nodecount > 10000); 
    &usage if ($minutes <= 0 || $minutes > 100000); 
    &usage unless $controllerPropFile =~ /^\//;

    die "controller properties file $controllerPropFile does not exist"
	unless -e $controllerPropFile;

    return ($nodecount, $minutes, $controllerPropFile);
}

sub usage {

    print "usage: liniacsubmit nodecount minutes controllerPropFileFullPath\n";
    exit(1);
}
